{"version":3,"sources":["assets/v1.png","assets/v2.png","assets/v3.png","assets/v4.png","Sidebar.js","Quote.js","NavButton.js","Preface.js","About.js","Definition.js","Prologue.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","props","_useState","useState","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","BurgerMenu","styles","bmMenuWrap","transition","bmBurgerButton","width","height","left","top","isOpen","onStateChange","react_router_dom","className","to","onClick","Quote","style","textAlign","flexDirection","alignItems","justifyContent","fontSize","color","fontFamily","marginTop","paddingTop","marginBlockEnd","title","display","marginBlockStart","fontStyle","quote","fontWeight","letterSpacing","author","NavButton","useEffect","window","scrollTo","isToggled","setToggle","framer_motion_es","div","onHoverStart","onHoverEnd","direction","border","float","cursor","right","marginRight","marginBottom","position","animate","variants","active","opacity","background","x","scale","inActive","link","Preface","src_Quote","textDecoration","src_NavButton","About","Definition","bg_color","Note","undefined","spanStyle","lineHeight","textStyle","padding","children","AbstractionExample","value","setValue","images","image1","image2","image3","image4","Fragment","src","alt","margin","Slider","step","min","max","onChange","event","newValue","Prologue","src_Definition","App","src_Sidebar","pageWrapId","outerContainerId","react_router","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d10c30a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/v1.28f2ec39.png\";","module.exports = __webpack_public_path__ + \"static/media/v2.49252dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/v3.b2e18bee.png\";","module.exports = __webpack_public_path__ + \"static/media/v4.3052fadc.png\";","import React, { useState } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './burger.css'\r\n\r\nfunction Sidebar(props) {\r\n\r\n  const [state, setState] = useState(false);\r\n\r\n  const style = {\r\n    bmMenuWrap: {\r\n      transition: 'all 0.3s'\r\n    },\r\n    bmBurgerButton: {\r\n      width: '22px',\r\n      height: '18px',\r\n      left: '13px',\r\n      top: '20px'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Menu styles = {style} isOpen={state} onStateChange={() => setState(props.isOpen)}>\r\n      <Link className=\"menu-item\" to=\"/preface\" onClick={()=>setState(false)}>\r\n        Preface\r\n      </Link>\r\n\r\n      <Link className=\"menu-item\" to=\"/prologue\" onClick={()=>setState(false)}>\r\n        Prologue\r\n      </Link>\r\n\r\n      <Link className=\"menu-item\" to=\"/about\" onClick={()=>setState(false)}>\r\n        About\r\n      </Link>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Quote(props) {\r\n    const quoteStyle = {\r\n        display: 'block',\r\n        textAlign: 'center',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: 'calc(12px + 2vmin)',\r\n        marginBlockStart: 'auto',\r\n        color: 'rgb(184, 182, 182)',\r\n        fontFamily: 'Alegreya Sans SC , sans-serif',\r\n        fontStyle: 'italic'\r\n      }\r\n    \r\n    const authorStyle = {\r\n        display: 'block',\r\n        textAlign: 'center',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: 'calc(1px + 2vmin)',\r\n        marginBlockStart: 'auto',\r\n        color: 'rgb(184, 182, 182)',\r\n        fontWeight: '400',\r\n        fontFamily: 'Alegreya Sans SC , sans-serif',\r\n        letterSpacing: '5px'\r\n      }\r\n    \r\n      const titleStyle = {\r\n        textAlign: 'center',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: 'calc(40px + 2vmin)',\r\n        color: 'black',\r\n        fontFamily: 'Prata, serif',\r\n        marginTop: 'auto',\r\n        paddingTop: '5%',\r\n        marginBlockEnd: '1%'\r\n      }\r\n      \r\n    return (\r\n        <div>\r\n        <p style={titleStyle}>{props.title}</p>\r\n        <span style={quoteStyle}>{props.quote}</span>\r\n        <span style={authorStyle}>{props.author}</span>\r\n        <br/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quote","import React, {useState, useEffect} from 'react';\r\nimport {motion} from 'framer-motion'\r\n\r\nfunction NavButton (props) {\r\n    const prevStyles = {\r\n        alignItems: 'center',\r\n        position: 'absolute',\r\n        left: '0px',\r\n        border: '1px solid black',\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        display: \"flex\",\r\n        fontFamily: 'Prata , serif',\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        marginTop: '40px',\r\n        marginBottom: '40px',\r\n        width: 100,\r\n      };\r\n    \r\n    const nextStyles = {\r\n        alignItems: 'center',\r\n        border: '1px solid black',\r\n        float: 'right',\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        display: \"flex\",\r\n        right: \"0px\",\r\n        fontFamily: 'Prata , serif',\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        marginRight: \"50px\",\r\n        marginTop: '40px',\r\n        marginBottom: '40px',\r\n        width: 100,\r\n    }\r\n      \r\n      const variants = {\r\n        active: {\r\n          opacity: 1,\r\n          background: \"black\",\r\n          x: \"50px\",\r\n          scale: 1,\r\n          color: \"white\"\r\n        },\r\n        inActive: {\r\n          opacity: 1,\r\n          background: \"white\",\r\n          x: \"50px\",\r\n          scale: 1,\r\n          color: \"black\"\r\n        }\r\n      };\r\n    \r\n    useEffect(() => {\r\n      window.scrollTo(0,0)\r\n    }, []);\r\n\r\n    const [isToggled, setToggle] = useState(false);\r\n    return ( \r\n      <motion.div\r\n        onHoverStart={() => setToggle(true)}\r\n        onHoverEnd={() => setToggle(false)}\r\n        style={props.direction === \"Next\" ? nextStyles : prevStyles}\r\n        animate={isToggled ? \"active\" : \"inActive\"}\r\n        variants={variants}\r\n      >\r\n        <span>{isToggled ? props.link : props.direction}</span>\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  export default NavButton","import React from 'react';\r\nimport './App.css';\r\nimport Quote from \"./Quote.js\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavButton from \"./NavButton.js\"\r\n\r\nfunction Preface(props) {\r\n\r\n\r\n  return (\r\n        <div className=\"Body\">\r\n        <Quote title='Preface' quote=\"i hate algebra\" author=\"John Conway\"/>\r\n        I’d like to begin by describing my motivations and goals for this project.\r\n        <br/>\r\n        <br/>\r\n        I have a very sincere and deep passion for math. I began developing an interest in the 4th grade when I discovered that long multiplication wasn’t always necessary to find the product between two numbers. Sometimes there were tricks that allowed you to compute it faster. This concept of discovering hidden procedures led me down a rabbit hole of number patterns that developed into a fascination with the underlying mechanics.\r\n        <br/>\r\n        <br/>\r\n        Even so, at that point I was only aware that there was <i>something</i> going on – pinning down something exact was still far from reach. During my second year in college, I began my first foray into what I would describe as real mathematics: linear algebra. Up until this point, I still believed that math was a numbers game. It was a collection of formulas and calculations and the very best mathematicians were those who could derive new ones or memorize a lot of them. While this may be an apt description for arithmetic, I realized that my assumptions had been completely wrong. \r\n        <br/>\r\n        <br/>\r\n        Math is art. It is the foundation of our understanding of the universe. It is the fullest realization of humanity’s ability to create and think. It is the canvas of expression for logic, the paradoxical intersection of creativity and rationality. \r\n        <br/>\r\n        <br/>\r\n        Once these truths became self-evident, I soon realized that most others didn’t share my passion. And that’s fine, not everyone has to be a mathematician. What bothered me is how most hadn’t even <i>seen</i> what math really is. Most saw math as an unforgiving, unending string of formulas to be memorized. Those who were unable to develop an intuition for something so brazenly unintuitive were left to feel like they were “bad” at it. Students everywhere were developing ill-informed opinions about my favorite thing in the world. \r\n        <br/>\r\n        <br/>\r\n        My goal is to show you real math. I want you to understand why I like it. I want you to be able to see things differently, see the art hidden behind the logic. I will try to make no assumptions of your past knowledge, and I will motivate <i>everything</i> with reasoning. Nothing will be taken for granted. \r\n        <br/>\r\n        <br/>\r\n        I hope you enjoy the journey as much as I did.\r\n        <Link to=\"/prologue\" style={{textDecoration: \"none\",  display: \"inline\"}}>\r\n          <NavButton direction=\"Next\" link=\"Prologue\"/>\r\n        </Link>\r\n        </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Preface","import React from 'react';\r\nimport './App.css';\r\nimport Quote from \"./Quote.js\"\r\nimport NavButton from './NavButton.js'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction About(props) {\r\n\r\n  return (\r\n        <div className=\"Body\">\r\n        <Quote title=\"About\"/>\r\n            Hello! my name is Emran Shafaq. I currently work as a software engineer at Microsoft under the Windows Security team.\r\n            I graduated from the University of Texas at Austin with degrees in computer science and mathematics. I started this blog\r\n            primarily to learn React, but ultimately to develop my skills as an instructor. If you found this blog useful please share it \r\n            with others, or let me know! If you have a request for a topic, leave a comment! If you want more math learning tools, check out\r\n            3blue1brown on Youtube!\r\n        \r\n            <Link to=\"/prologue\" style={{textDecoration: \"none\",  display: \"inline\"}}>\r\n                <NavButton direction=\"Previous\" link=\"Prologue\"/>\r\n            </Link>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default About","import React from 'react';\r\n\r\nfunction Definition(props) {\r\n\r\n    const bg_color = {\"Note\" : \"#ba1626\", undefined : \"#7116bd\"}\r\n\r\n    const spanStyle = {\r\n        lineHeight: \"1.5\",\r\n        color: bg_color[props.title]\r\n    }\r\n\r\n    const textStyle = {\r\n        background: bg_color[props.title],\r\n        marginRight: \"5px\",\r\n        display: \"inline-block\",\r\n        lineHeight: \"1.2\",\r\n        color: \"white\",\r\n        padding: \"3px 6px\"\r\n\r\n    }\r\n    return (\r\n        <div>\r\n        <span style={spanStyle}>\r\n            <span style={textStyle}>{props.title || \"Definition\"}</span> {props.children}\r\n        </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Definition","import React, { useState } from 'react';\r\nimport Definition from './Definition.js';\r\nimport './App.css';\r\nimport Quote from './Quote.js';\r\nimport { Link } from 'react-router-dom';\r\nimport NavButton from './NavButton.js';\r\nimport image1 from './assets/v1.png';\r\nimport image2 from './assets/v2.png';\r\nimport image3 from './assets/v3.png';\r\nimport image4 from './assets/v4.png';\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\nfunction AbstractionExample(props) {\r\n\r\n  const [value, setValue] = useState(0);\r\n  const descriptionText = [\r\n    \"OK gamers\",\r\n    \"No more gamers\",\r\n    \"what in the\",\r\n    \"ok this\"\r\n  ]\r\n\r\n  const images = [\r\n    image1,\r\n    image2,\r\n    image3,\r\n    image4\r\n  ]\r\n  const textStyle = {\r\n      display: \"block\",\r\n      width: \"fit-content\",\r\n      margin: \"auto\",\r\n      background: \"#f8f3fc\",\r\n      color: \"black\",\r\n      padding: \"3px 6px\"\r\n\r\n  }\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <img src={images[value]} alt=\"Logo\" className=\"center\"></img>\r\n    <span style={textStyle}>\r\n      {descriptionText[value]}\r\n    </span>\r\n    <br/>\r\n    <Slider\r\n      value={value}\r\n      step={1}\r\n      min={0}\r\n      max={3}\r\n      onChange={handleSliderChange}\r\n      />\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nfunction Prologue(props) {\r\n\r\n  return (\r\n        <div className=\"Body\">\r\n        <Quote title='Prologue' quote='mathematics is the art of giving the same name to different things' author='Henri Poincaré'/>\r\n          In the following introductory lesson, I would like to go over how to think about mathematical concepts. My goal is to try and get you away from thinking about math as formulas and instead get you to develop natural intuitions for concepts. \r\n          <br/>\r\n          <br/>\r\n          For the purposes of this project, our working definition of <i>mathematics</i> is the process of finding meaningful patterns within abstractions.\r\n          <br/>\r\n          <br/>\r\n          Now, this is by no means an end-all definition. Math is wonderfully complex, and many have offered their own interpretations of what it means. However, I want you to think of every concept we learn as an <i>abstraction</i>. Defining and understanding what abstractions are will comprise the bulk of the rest of this section.\r\n          <br/>\r\n          <br/>\r\n          <Definition>\r\n            An <i>abstraction</i> is a simplified model of a concept. It attempts to remove unnecessary features that complicate our understanding of how something works.\r\n          </Definition>\r\n          <br/>\r\n          Before I elaborate further, let’s look at an example.\r\n          <br/>\r\n          <br/>\r\n          If you were travelling through a city and wanted to draw a map of your surroundings to help you get around, you would probably trace out some roads, draw in some buildings, and add some names to streets. This map you’ve now created is an abstraction of the city itself. Each feature you draw in is an abstraction of something in the city, or a representation of something real. For example, the lines in your drawing are an abstraction of the roads in real life. They are a simplified model of what we see. \r\n          <br/>\r\n          <br/>\r\n          <Definition title=\"Note\">\r\n          Pause and ponder. Do you have a grasp on what abstractions are? What are other abstractions in our map? Can you think of other examples of abstractions?\r\n          </Definition>\r\n          <br/>\r\n          Now, this map is pretty great for modelling your surroundings and it’s particularly good at helping you navigate the city. \r\n          <br/>\r\n          <br/>\r\n          But let’s say over time you become more familiar with your surroundings. You don’t necessarily need a detailed map to give you information about where you are. Instead, you’re more interested in how points of interest in the city connect to each other. You only want to connect two buildings if they are within walking distance to each other. We don’t care about the shape of the roads, just whether there is a short path from one building to the next. This task <i>can</i> be accomplished with our original map, but there’s unnecessary detail that impedes our new desires. These details were useful before when we were less familiar with the city, but now that we’re experienced they can be disregarded.\r\n          <br/>\r\n          <br/>\r\n          So let’s try and construct a new model. Instead of drawings of buildings, let’s just have a circle where the building is supposed to be. Instead of having a detailed reconstruction of the roads of our city, let’s just have a line connect two circles if they are reasonably close to each other. Now our map looks quite different! To the untrained eye, it looks like a bunch of randomly connected circles. But we devised this new model with a specific goal in mind - to understand how buildings in our city are connected at a high level. We want to look at our map and instantly know if there is a way to get from one building to the next. The details of the route are not important anymore, we just want to know if it’s possible. This new model has removed the details that were required for navigation because our goal has now shifted. \r\n          <br/>\r\n          <br/>\r\n          The fact that we developed this new model not from looking at the city, but rather from looking at a <i>map</i> of the city indicates something that is rather profound: abstractions can build upon existing abstractions. We took what we knew about maps and tried to minimize the number of details to look at our city in a new way. This concept alone is what makes math so vast and powerful. We can continually develop abstractions and gain even more insight as we go along.\r\n          <br/>\r\n          <br/>\r\n          Though our new map fulfills its task of understanding proximity well, it fails miserably as a navigation tool. If we were to give our new map to a new resident of the city, they would probably look at us with confusion and ask us to leave them alone. But why are they behaving like this? It’s because our new map lacks the necessary details for navigation and only really makes sense to someone who has already lived in the city. To a newcomer who still <i>needs</i> the details, it doesn’t do a great job. \r\n          <br/>\r\n          <br/>\r\n          This paves the way for another key insight: abstraction is a spectrum. The more abstract our model, the more details we lose, but the more general our insights. \r\n          <br/>\r\n          <br/>\r\n          <AbstractionExample></AbstractionExample>\r\n          <br/>\r\n          <br/>\r\n          Abstractions are an extremely common tool used pretty much any time we want to represent something in the real world.\r\n          <br/>\r\n          <br/>\r\n          Let’s consider some mathematical abstractions. One of the most fundamental objects in math is the <i>set</i>.\r\n          <br/>\r\n          <br/>\r\n          <Definition>A <i>set</i> is  a collection of other objects. It is an abstraction of one’s idea of a container, or a list.</Definition>\r\n          <br/>\r\n          [set example]\r\n          When we want to develop intuitions about how mathematical objects behave, we typically do so by analyzing sets. For example, we could spend our whole life studying the color blue, but that really doesn’t help us understand color as a whole. We should instead look at the <i>set</i> of all colors, of which blue is an <i>element</i>. Now, anything we glean about this set applies not only to blue, but to <i>all</i> colors, and our life has no longer been wasted! Sets are valuable because they are a natural generalization - we want to consider how <i>all</i> objects of a certain type behave, not just the one. \r\n          <br/>\r\n          <br/>\r\n          Another important mathematical concept is that of a <i>function</i>. \r\n          <br/>\r\n          <br/>\r\n          <Definition>A <i>function</i> is a mathematical object that takes in an input and assigns it uniquely to an output. It can be thought of as an abstraction of a machine; it takes something in and modifies it in a consistent way.</Definition>\r\n          <br/>\r\n          While sets may be the most valuable structure in math, they are very static in nature. Once you define a set, there’s nothing you can do to really <i>change</i> the set. You can define a new set, but that doesn’t change anything about the first one. But what if we want to look at how multiple sets interact with each other? What if we want to take some elements from one set and combine them with elements from a second set? \r\n          <br/>\r\n          <br/>\r\n          These things are only possible with functions. Functions are the moving parts of math; they are the bridges that link sets. If sets are like nouns in our mathematical language, then functions are like verbs. They make things happen. \r\n          <br/>\r\n          <br/>\r\n          We will go into greater detail on sets and functions and their many flavors in the future, but for now just try and develop a basic intuition for what they might mean to you.\r\n          <br/>\r\n          <br/>\r\n          The topics covered in this section may be brand new or may not be completely intuitive. And that’s fine! I’m trying to get you to think in a completely new way, which may be uncomfortable at first. Like anything, it’s a skill that is developed over time through continually engaging with the topic. Going forward, I want you to think about what kind of abstractions we’re making when we cover new topics. What is the underlying structure this new object is trying to explain? How does this abstraction relate to others we’ve seen before? What is the value in looking at an abstraction over what we are trying to model?\r\n          <br/>\r\n          <br/>\r\n          Our next section will be the beginning of our first unit on vectors, but the topics here are instrumental to all future sections. If you need a refresher, feel free to come back here and reconsider the fundamentals. If something feels confusing in the text, feel free to reach out to me for clarifications. I’ll also add links to other resources that I find very helpful.\r\n          <br/>\r\n          <br/>\r\n          With that, our journey continues!\r\n          <br/>\r\n          <Link to=\"/preface\" style={{textDecoration: \"none\",  display: \"inline\"}}>\r\n            <NavButton direction=\"Previous\" link=\"Preface\"/>\r\n          </Link>\r\n\r\n          <Link to=\"/about\" style={{textDecoration: \"none\",  display: \"inline\"}}>\r\n            <NavButton direction=\"Next\" link=\"About\"/>\r\n          </Link>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Prologue","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom'\nimport Sidebar from \"./Sidebar.js\"\n// import { createBrowserHistory } from \"history\";\nimport Preface from \"./Preface.js\"\nimport About from \"./About.js\"\nimport Prologue from \"./Prologue.js\"\n\nfunction App() {\n\n\n  return (\n      <main>\n          <HashRouter>\n              <Sidebar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n              <Route path= '/' component={Preface} exact />\n              <Route path= '/preface' component={Preface}  />\n              <Route path= '/prologue' component={Prologue}  />\n              <Route path= '/about' component={About}  />\n              \n          </HashRouter>\n      </main>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n        <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}